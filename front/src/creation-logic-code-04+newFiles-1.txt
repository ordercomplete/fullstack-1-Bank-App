Ми створюємо додаток Bank App. 
Відповідай англійською, якщо так буде витрачатись менше токенів на відповідь. 
Всі додані зміни у коді обов'язково коментуй поруч зі змінами в коді (підтверди як зрозумів). 
Генеруй код лише тих фрагментів, які змінюються та не переписуй все цілком (підтверди як зрозумів).
Якщо продовжуєш, то починай з моменту закінчення попередньої відповіді (підтверди як зрозумів).

Структура запиту:
1. Запитання, Завдання чи Проблеми для вирішення.
2. Опис зі створення файлів (надам якщо потрібно).
3. Код вже створених файлів, які треба взяти за основу або треба доопрацювати.

Проблема:
На сторінці RecoveryConfirmPage з'являється помилка:
onChange is not a function
TypeError: onChange is not a function
    at handleChange (http://localhost:3000/static/js/bundle.js:1462:5)
    at HTMLUnknownElement.callCallback (http://localhost:3000/static/js/bundle.js:21973:18)
    at Object.invokeGuardedCallbackDev (http://localhost:3000/static/js/bundle.js:22017:20)
    at invokeGuardedCallback (http://localhost:3000/static/js/bundle.js:22074:35)
    at invokeGuardedCallbackAndCatchFirstError (http://localhost:3000/static/js/bundle.js:22088:29)
    at executeDispatch (http://localhost:3000/static/js/bundle.js:26232:7)
    at processDispatchQueueItemsInOrder (http://localhost:3000/static/js/bundle.js:26258:11)
    at processDispatchQueue (http://localhost:3000/static/js/bundle.js:26269:9)
    at dispatchEventsForPlugins (http://localhost:3000/static/js/bundle.js:26278:7)
    at http://localhost:3000/static/js/bundle.js:26438:16
при цьому при введенні вірних даних вона спрацьовує, зберігає новий пароль і переходить на сторінку входу.    


// Файл RecoveryConfirmPage
import React, { useContext } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import { AuthContext } from "../../AuthContext";
import { updatePassword } from "../../AuthActions";
import { NavigationLink } from "../../component/NavigationLink";
import PasswordInput from "../../component/PasswordInput";

export const RecoveryConfirmPage = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const { email, code } = location.state; // Getting data from RecoveryPage
  const { users, dispatch } = useContext(AuthContext); // add dispatch 16.06.24-22:38

  const user = users.find((user) => user.email === email); // Find the user

  if (!user) {
    alert("User not found");
    console.log("Recovery Confirm Page: User not found", email);
    return null; // Return null to avoid rendering the page
  }

  console.log("Selected user for recovery:", user);

  const handleRestore = (event) => {
    event.preventDefault();
    const { recoveryCode, newPassword } = event.target.elements;

    if (recoveryCode.value === code) {
      // Call the method to update the password
      const updateResponse = updatePassword(email, newPassword.value, dispatch); // add dispatch 16.06.24-22:38

      if (updateResponse.success) {
        console.log(`Password for ${email} changed successfully.`);
        navigate("/signin"); // Redirect to sign in page
      } else {
        console.log(updateResponse.message); // Show the error message
      }
    } else {
      console.log("Incorrect verification code. Please try again.");
    }
  };

  return (
    <div className="default-container">
      <div>
        <button onClick={() => navigate(-1)} className="nav_back-button">
          Назад
        </button>
        <NavigationLink isAuthenticated={Boolean()} />
      </div>
      <h4 className="text-under-title">Write the code you received</h4>
      <form onSubmit={handleRestore}>
        <div className="input_field-container">
          {/* <input
            className="input_field"
            name="recoveryCode"
            placeholder="Enter Code"
            required
          /> */}
          <PasswordInput
            name="recoveryCode"
            // type="text"
            placeholder="Enter Code"
          />

          {/* <input
            className="input_field"
            name="newPassword"
            type="password"
            placeholder="New Password"
            required
          /> */}
          <PasswordInput name="newPassword" placeholder="New Password" />
        </div>
        <button type="submit" className="continue-button">
          Restore Password
        </button>
      </form>
    </div>
  );
};

export default RecoveryConfirmPage;
