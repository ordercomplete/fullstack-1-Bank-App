// На цей момент є проблема зберігання користувачів, треба знати та виправити проблему.
// Також з'явилося багато помилок після останньої твоєї модернізації. Знайди неузгодження

// Наступна рекомендація від чату GPT, але вона суперечлива, тому що у завданні у нас стоїть мета
//                 підтвердити акаунт що може зробити користувач, який вже увійшов в акаунт:
//                 "Переконайтеся, що PrivateRoute використовується тільки для захищених ресурсів,
//                 куди доступ мають тільки підтверджені користувачі.
//                 Ця логіка не повинна застосовуватися до самої сторінки signup-confirm,
//                 оскільки це може призвести до постійного циклу перенаправлення,
//                 якщо сторінка signup-confirm також захищена через PrivateRoute."

// Створи файли AuthRoute, AuthContext, SignupPage, SignupConfirmPage, BalancePage враховуючи умови, вказані в коментарях файлу App.js для створення процесів на цих сторінках.

// Якщо узагальнити завдання:
// 1. Потрібно, щоб після введення логіна та пароля на сторінці реєстрації SignupPage
// (у разі, якщо такого користувача ще не було створено раніше, якщо він існує треба сповістити про наявність такого користувача) створювався код перевірки,
// який з'являвся у вікні alert, після чого відбувався перехід на сторінку SignupConfirmPage,
// де буде потрібно ввести цей код і після успішного введення та натискання кнопки "продовжити"
// відбувався перехід на сторінку BalancePage path="/balance"
// 2. const authContextData = {}; -  Визначте відповідну структуру або надайте відповідні дані. Де повинна бути ця змінна, в якому файлі?


//Для Файлу App.js

У наступному тексті описана суть та логіка потрібних файлів для додатку.
Далі буде надано код вже створених файлів, які треба буде перевірити на помилки, логіку дій та взаємозв'язок між вже створеними файлами.
Задачі будуть такими:
1. const authContextData = {};  створити змінну там, де вона потрібна бути та імпортувати куди потрібно. Наразі це App.js
2. Є проблема з Uncaught TypeError: dispatch is not a function, вона виникає після вводу даних для реєстрації. Ось як виглядає помилка:
dispatch is not a function
TypeError: dispatch is not a function
    at handleSubmit (http://localhost:3000/static/js/bundle.js:2455:7)
    at HTMLUnknownElement.callCallback (http://localhost:3000/static/js/bundle.js:18246:18)
    at Object.invokeGuardedCallbackDev (http://localhost:3000/static/js/bundle.js:18290:20)
    at invokeGuardedCallback (http://localhost:3000/static/js/bundle.js:18347:35)
    at invokeGuardedCallbackAndCatchFirstError (http://localhost:3000/static/js/bundle.js:18361:29)
    at executeDispatch (http://localhost:3000/static/js/bundle.js:22505:7)
    at processDispatchQueueItemsInOrder (http://localhost:3000/static/js/bundle.js:22531:11)
    at processDispatchQueue (http://localhost:3000/static/js/bundle.js:22542:9)
    at dispatchEventsForPlugins (http://localhost:3000/static/js/bundle.js:22551:7)
    at http://localhost:3000/static/js/bundle.js:22711:16


Опис по створенню файлів 

AuthContext.Provider value={authContextData}  Створюємо контекст у файлі AuthContext, в якому будемо тримати дані аутентифікації
В контексті буде знаходитись: створений state через useReducer, який буде знаходитись властивість token та об'єкт user dispatch функція, яка буде мати наступні типи дій: увійти в акаунт, вийти з акаунту
      
AuthRoute це компонент, який перевіряє, чи є в контексті аутентифікації токен, якщо так, то переводить на сторінку /balance 
         
WellcomePage На цій сторінці ми створюємо верстку та розміщуємо дві кнопки-посилання на сторінку /signup та сторінку /signin
             
SignupPage На цій сторінці створюємо форму, яка відправляє запит на реєстрацію користувача та переводить на сторінку /signup-comfirm. Після реєстрації потрібно зберегти дані аутентифікації в контекст 

На сторінці /signup-confirm використовуємо PrivateRoute, адже підтвердити акаунт може користувач, який вже увійшов в акаунт Після підтвердження акаунту потрібно оновити дані аутентифікації в контексті 
          
SignupConfirmPage На цій сторінці вводимо код підтвердження реєстрації акаунта та після успішного запиту переводимо на сторінку /balance. Перевіряємо в контексті аутентифікації чи user.confirm. Якщо так, то переводимо на сторінку /balance
        
SigninPage Вхід в акаунт. Зберігаємо дані аутентифікації в контекст. Якщо user.confirm є false, то перенаправляємо на /signup-confirm.
              
RecoveryPage Сторінка відновлення акаунту. Після вводу пошти, створюється код з підтвердженням відновлення акаунту, переводимо на сторінку /recovery-confirm
             
RecoveryConfirmPage Сторінка підтвердження відновлення та оновлення пароля.  Після відправки форми потрібно перевести на сторінку /balance
              
PrivateRoute Приватний роут, який перевіряє наявність токена в контексті аутентифікації. Будь-який запит, який відправляється в сторінках під приватним роутом повинні передавати токен (будь-яким варіантом) на сервер для перевірки токена та отримання інформації що за користувач відправляє дані та передати конкретно його дані
                
NotificationsPage Сторінка списку нотифікацій, який створюються при діях:
Вхід в акаунт
Відновлення акаунту
Зміна пароля
Зміна пошти
Поповнення
Переказ 
              
SettingsPage Сторінка налаштувань, на якій можна:
Змінити пароль
Змінити пошту
Вийти з акаунту
Кожна дія повинна в кінці оновлювати контекст аутентифікації
              
receivePage Сторінка поповнення балансу. 
Користувач вводить суму, натискає на платіжний метод і відправляється запит. 
Після чого створюється нова транзакція та нова нотифікація
      
SendPage Користувач вводить пошту та суму. Після чого у користувача, який відправив суму, створюється транзакція на списання грошей на нотифікацію, а у користувача, який отримав гроші, створюється транзакція на отримання грошей та нотифікацію.
       
TransactionPage Сторінка з детальною інформацією про конкретну транзакцію. В сторінці є trainsactionId, який вказує на ідентифікатор транзакції, який використовується для отримання та виводи інформації про конкретну транзакцію. Перехід на цю сторінку здійснюється через натискання на карточку транзакції на сторінці /balance
              
Далі код файлів:



